<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:security="http://www.springframework.org/schema/security"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
							http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
				
				
	<context:component-scan base-package="com.board.dao"/>			
							
	<security:http use-expressions="true" >
	<security:csrf disabled="true"/>
		<security:intercept-url pattern="/board/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
		<security:intercept-url pattern="/**" access="permitAll()"/>	
		<security:form-login
			username-parameter="user_id"
			password-parameter="user_pwd"
			login-page="/login/loginPage"
			default-target-url="/login/home"
			
		/>
		
		
		<security:logout
			logout-success-url="/"
		/>		
		
		<!-- 로그인했을때 권한이 없는 페이지를 요청했을때 발생 -->
		<security:access-denied-handler
			error-page="/access_denied_page"
		/>
		
	
	</security:http>
	<!-- <security:jdbc-user-service data-source-ref="dataSource" id="userService2"
		users-by-username-query="select ID as user_id, PASSWORD as user_pwd, ENABLED from USER where ID=?"
		authorities-by-username-query="select ID as user_id, AUTHORITY from USER where ID=?"	
	/>
	 -->
	<security:authentication-manager>
		<security:authentication-provider ref="userAuthProvider"/>
		<security:authentication-provider user-service-ref="userService"/>
		<!-- <security:authentication-provider user-service-ref="userService2"/> -->
		
	</security:authentication-manager>

	<bean id="userService" class="com.board.service.UserDetailService"/>
	<bean id="userAuthProvider" class="com.board.service.UserAuthenticationProvider"/>
	
	<bean id ="bcryptPasswordEncoder" class = "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	
</beans>
