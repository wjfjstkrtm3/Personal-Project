<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- 
Please update your schema declarations to the 4.2 schema 
라는 오류가 나오면
xsi:scemaLocation 에있는 버전을 4.2버전으로 수정하면됨
--> 




	<!-- 
	auto-config="true"는 기본 로그인페이지 / HTTP 기본인증 / 로그아웃 기능등을 제공
	use-expressions="ture"는 SpEL을 사용한다 라는 의미
	
	 -->
	<security:http auto-config="true" use-expressions="true">
			<security:intercept-url pattern="/board/*" access="hasRole('ROLE_USER')"/>
			
		<!-- 로그인 설정 -->
		<!--
			username-parameter : input 태그의 아이디 혹은 이메일 name 속성 값 (default: username)
			password-parameter : input 태그의 비밀번호 name 속성 값 (default: password)
			login-page : 새로운 로그인 화면 url (default: 스프링 기본 로그인 화면)
			login-processing-url : form 태그의 action 속성 (default: POST /login)
			default-target-url : 로그인 성공시 호출할 url
			authentication-failure-url : 로그인 실패시 호출할 url (default: /login?error=1)
			authentication-success-handler-ref : 로그인 성공시 default-target-url이 아닌 핸들러로 리다이렉트
			authentication-failure-handler-ref : 로그인 실패시 authentication-failure-url이 아닌 핸들러로 리다이렉트
			always-use-default-target : 무조건 핸들러가 지정한 페이지로 이동 (default: false)
		-->
		<security:form-login
			username-parameter="userId"
			password-parameter="userPwd"
			login-processing-url="/login"
			login-page="/login"
			default-target-url="/board/listPageSearch"
			authentication-failure-url="/"
		/>
		
		 <!-- 
	      Remember-me 기능을 이용한 자동 로그인 기능
	
	      key: 키의 이름
	      token-validity-seconds: 쿠키의 유효 시간(초 단위)
	      remember-me-parameter: 자동 로그인을 선택할 input 태그의 name 값 ex) input type='checkbox' name="remember-me"
	      remember-me-cookie: 자동 로그인 쿠키의 이름
    	 -->
		
		<security:remember-me key="autoLoginKey" token-validity-seconds="604800" remember-me-parameter="remember-me" remember-me-cookie="remember_cookie" />
		
		
		<!-- 로그아웃 설정 -->
		<!-- 
			logout-url : 로그아웃 처리에 대한 URL. form태그의 action 속성에 지정한 값. (default: POST /logout)
			logout-success-url : 로그아웃 성공시, 이동할 URL. (default: /login?logout)
			invalidate-session : 로그아웃 시, session을 무효화할 지 선택. (default: true)
			delete-cookies : 로그아웃 성공시, 삭제할 쿠키 이름 지정
			success-handler-ref : 로그아웃 성공시, logout-success-url 이 아닌 핸들러로 리다이렉트
		 -->
		<security:logout delete-cookies="remember_cookie" invalidate-session="true"
			logout-url="/logout"
			logout-success-url="/"
		/>
		
		<!-- 
		          권한이 없을때 접근 불가 페이지 설정 
		     ex) 로그인을 할때, url을 알고있어서 바로 게시판 페이지를 간다던지.. 
		 -->
		<security:access-denied-handler
			error-page="/access_denied_page"
		/>
		
	</security:http>
	<!--
	users-by-username-query
	사용자를 인증하는 컬럼  (username, password, enabled 3가지 컬럼필수) 
	authorities-by-username-query
	사용자의 권한을 가져오는 컬럼 (username, authority필수 인거같음) 
	** as 뒤에 있는 부분은 security 설정에서 <form-login> 태그에 설정한 값들이다.
	-->
	<security:jdbc-user-service data-source-ref="dataSource" id="userService"
		users-by-username-query="SELECT id as userId, password as userPwd, enabled FROM user WHERE id=?"
		authorities-by-username-query="SELECT id as userId, authority from user WHERE id=?"
	/>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="userService">
		</security:authentication-provider>
	</security:authentication-manager>
	
	
	<!--
	 인증과 관련된 정보를 설정
	<security:authentication-manager>
		 인증에 대한 정보를 제공하는 제공자를 지정하는 태그 
		<security:authentication-provider>
			 사용자 정보를 설정하는 태그 (사용자 이름(ID), 권한, 비밀번호를 설정) 
			<security:user-service>
				<security:user name="user" password="{noop}user" authorities="ROLE_USER"/>
			</security:user-service>		
		</security:authentication-provider>
	</security:authentication-manager>
	-->


</beans>
